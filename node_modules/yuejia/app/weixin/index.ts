// import stringToHex from '../../utils/stringToHex';
// import global from '../../app/global';
import Toast from '../../component/Toast';
import ImgView from '../../component/ImgView';
import isHttp from '../../utils/isHttp';
const { hex_sha1 } = require('./sha1.js');

interface Options {
  ticket: string;
  appId: string;
  shareLink?: () => string;
  shareTitle?: string;
  shareDesc?: string;
  debug?: boolean;
}

interface OnShareParams {
  title?: string;
  desc?: string;
  imgHost?: string;
  imgUrl?: string;
  link?: string;
  callback?: () => void;
}

export interface Share {
  /** 标题 */
  title?: string;
  /** 描述 */
  desc?: string;
  /** 封面 */
  cover?: string;
}

interface Res {
  localData: string;
  serverId: string;
}

interface WindowExtends extends Window {
  __wxjs_is_wkwebview: boolean;
}

declare const wx: any;
declare const window: WindowExtends;

// const env = process.env.NODE_ENV;
const conventionMenuItem = [
  'menuItem:share:qq',
  'menuItem:share:weiboApp',
  'menuItem:share:facebook',
  'menuItem:share:QZone',
  'menuItem:editTag',
  'menuItem:delete',
  'menuItem:copyUrl',
  'menuItem:originPage',
  'menuItem:readMode',
  'menuItem:openWithQQBrowser',
  'menuItem:openWithSafari',
  'menuItem:share:email',
  'menuItem:share:brand'
];

export class WeiXin {
  constructor() {
    this.ready = this.ready.bind(this);
    this.hideAllNonBaseMenuItem = this.hideAllNonBaseMenuItem.bind(this);
    this.hideConventionMenuItem = this.hideConventionMenuItem.bind(this);
    this.hideShareMenuItem = this.hideShareMenuItem.bind(this);
    this.previewImage = this.previewImage.bind(this);
    this.chooseImage = this.chooseImage.bind(this);
    this.uploadImage = this.uploadImage.bind(this);
    this.getLocalImgData = this.getLocalImgData.bind(this);
    this.onShare = this.onShare.bind(this);
  }

  private apiList: string[] = [
    'previewImage',
    'hideMenuItems',
    'chooseImage',
    'uploadImage',
    'getLocalImgData',
    'onMenuShareTimeline',
    'onMenuShareAppMessage',
    'onMenuShareWeibo',
    'onMenuShareQZone',
    'showOptionMenu',
    'hideAllNonBaseMenuItem'
  ];
  public static options: Options | undefined;

  private getHttpUrl(src: string | undefined): string {
    const host = ImgView.defaultHost;
    const url = src && isHttp(src) ? src : host + src;

    return url;
  }

  public ready(callback: () => void): void {
    if (WeiXin.options) {
      wx.ready(callback);
    }
  }

  /** 初始化配置，对应wx.config */
  public config(): void {
    if (WeiXin.options) {
      const { ticket, debug, appId } = WeiXin.options;
      const timestamp = new Date().getTime();
      const nonceStr = 'ak0os7h1dojn51ojvs5r8lfwsq3debsu';
      const url = window.location.href.split('#')[0];
      const data = `jsapi_ticket=${ticket}&noncestr=${nonceStr}&timestamp=${timestamp}&url=${url}`;
      const signature = hex_sha1(data);
      wx.config({
        debug,
        appId,
        timestamp,
        nonceStr,
        signature,
        jsApiList: this.apiList
      });
    }
  }

  /** 隐藏所有非基础按钮接口 */
  public hideAllNonBaseMenuItem(): void {
    this.ready(() => {
      wx.hideAllNonBaseMenuItem();
    });
  }

  /** 常见隐藏菜单配置 */
  public hideConventionMenuItem(): void {
    this.ready(() => {
      wx.showOptionMenu();
      wx.hideMenuItems({
        menuList: conventionMenuItem
      });
    });
  }

  /** 在常见菜单配置基础隐藏所有分享 */
  public hideShareMenuItem(): void {
    this.ready(() => {
      const menuList = [
        ...conventionMenuItem,
        'menuItem:share:appMessage',
        'menuItem:share:timeline',
        'menuItem:favorite',
      ];
      wx.showOptionMenu();
      wx.hideMenuItems({
        menuList
      });
    });
  }

  /** 预览图片 */
  public previewImage(src: string, imgHost: string): void {
    this.ready(() => {
      // tslint:disable-next-line:max-line-length
      const urls = (src.indexOf('http') >= 0 || src.indexOf('https') >= 0) ? [src.replace('s_', 'l_')] : [(imgHost + src).replace('s_', 'l_')];

      wx.previewImage({
        // 当前显示图片的http链接
        current: urls[0],
        // 需要预览的图片http链接列表
        urls
      });
    });
  }

  /** 图像选择 */
  public chooseImage(savephotos: (serverId: string, localData: string) => void): void {
    wx.chooseImage({
      count: 1, // 默认9
      sizeType: ['original'], // 可以指定是原图还是压缩图，默认二者都有
      sourceType: ['album', 'camera'], // 可以指定来源是相册还是相机，默认二者都有
      success: (res: any) => {
        const localIds = res.localIds; // 返回选定照片的本地ID列表，localId可以作为img标签的src属性显示图片
        this.uploadImage(localIds[0], savephotos);
      }
    });
  }

  /** 上传图片 */
  public uploadImage(localId: string, savephotos: (serverId: string, localData: string) => void): void {
    Toast.loading('上传中...');
    wx.uploadImage({
      localId, // 需要上传的图片的本地ID，由chooseImage接口获得
      isShowProgressTips: 0, // 默认为1，显示进度提示
      success: (res: Res) => {
        Toast.close();
        // 兼容IOS wkwebview模式
        if (window['__wxjs_is_wkwebview']) {
          // 返回图片的服务器端ID
          this.getLocalImgData(localId, (localData) => savephotos(res.serverId, localData));
        } else {
          savephotos(res.serverId, localId);
        }
      },
      error: (e: Error) => {
        Toast.close();
      }
    });
  }

  /** 获取本地图片接口 */
  public getLocalImgData(localId: string, showphotos: (localId: string) => void): void {
    wx.getLocalImgData({
      localId, // 图片的localID
      success(res: Res): void {
        // localData是图片的base64数据，可以用img标签显示
        showphotos(res.localData);
      }
    });
  }

  /** 微信分享 */
  public onShare(params?: OnShareParams): void {
    this.ready(() => {
      const options = WeiXin.options;

      if (options && options.shareLink && options.shareTitle && options.shareDesc) {
        const callback = params && params.callback;
        const title = (params && params.title) || options && options.shareTitle;
        const desc = (params && params.desc) || options && options.shareDesc;
        const imgUrl = (params && params.imgUrl && this.getHttpUrl(params.imgUrl)) || 'https://wap.yuejia100.cn/assert/img/logo.jpg';
        // const pathname = global.history.location.pathname;
        const link = (params && params.link) || options.shareLink();
        const apiList = [
          'onMenuShareTimeline',
          'onMenuShareAppMessage',
          // 'onMenuShareQQ',
          // 'onMenuShareWeibo',
          // 'onMenuShareQZone'
        ];

        this.hideConventionMenuItem();

        for (let i = 0; i < apiList.length; i++) {
          const api = apiList[i];
          wx[api]({
            title,
            desc,
            link,
            imgUrl,
            success: callback
          });
        }
      } else {
        throw new Error('微信分享失败，缺失shareLink或shareTitle或shareDesc的配置');
      }
    });
  }
}

const weixin = new WeiXin();

export default weixin;