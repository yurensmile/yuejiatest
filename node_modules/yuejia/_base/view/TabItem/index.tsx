import * as React from 'react';
import * as classNames from 'classnames';
import { Value } from '../../action/Choice';
import IconText, { Props as IconTextProps } from '../IconText';
import Container, { Props as ContainerProps } from '../../../component/Container';

export interface Base {
  /** 格式化渲染 */
  format?: (value: Value, active: boolean, index: number) => any;
}

const prefixCls = 'yj-tabitem';
interface Props extends ContainerProps, IconTextProps, Base {
  value: Value;
  active: boolean | undefined;
  onClick: (e: React.MouseEvent<HTMLDivElement>, text: string) => void;
  index: number;
}

const TabItem = (props: Props) => {
  const { format, value, active, index, text } = props;
  return text ? (
    <Container
      {...props}
      onClick={(e) => {
        if (props.onClick) {
          props.onClick(e, text);
        }
      }}
    >
      {format ? format(value, !!active, index) : <IconText {...props} active={active} />}
    </Container>
  ) : (
    <div className={classNames(props.className, `${prefixCls}-empty`) } />
  );
};

export default TabItem;