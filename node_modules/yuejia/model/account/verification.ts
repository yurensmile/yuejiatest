import Request, { Props as RequestOptions, Event } from '../../app/request';
import Service from './index';
import Toast from '../../component/Toast';

export interface Params extends Event {
  [key: string]: any;
}

class Verification extends Request {
  constructor(service: Service, props: RequestOptions) {
    super(props);
  }

  /** 发送请求 */
  public async send(params: Params): Promise<void> {
    this.action({
      config: {
        url: this._api,
        method: 'post',
        data: params
      }
    }).then((response) => {
      if (response.retCode === '0000') {
        if (this._callback) {
          this._callback(response);
        }

        if (params && params.callback) {
          params.callback(response);
        }
      } else {
        Toast.show(response.retMsg);
      }
    }).catch((err) => {
      if (this._failback) {
        this._failback(err);
      }

      if (params && params.failback) {
        params.failback(err);
      }
      Toast.show('网络繁忙');
      throw err;
    });
  }
}

export default Verification;
