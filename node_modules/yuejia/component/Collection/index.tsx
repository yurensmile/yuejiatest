import yj from '../../typings';
import * as React from 'react';
import Auth, { Props as AuthProps } from '../Auth';
import sheet, { getActionName } from '../../model/behavior/sheet';
import PageStack from '../PageStack';

export interface Props extends yj.ComponentProps, yj.ComponentBehavior {
  children: any;
  /** 收藏状态，true为收藏，false为非收藏 */
  collection: boolean;
  onClick?: (e: React.MouseEvent<HTMLDivElement>, isCollection: boolean) => void;
  subscribeContent?: AuthProps['subscribeContent'];
}

class Collection extends React.Component<Props> {
  constructor(props: Props) {
    super(props);

    this.onClick = this.onClick.bind(this);
  }

  private onClick(e: React.MouseEvent<HTMLDivElement>): void {
    const stackComponent = PageStack.getStackComponent();

    if (stackComponent) {
      stackComponent.behavior.trigger({
        actionName: getActionName(sheet.Collection, this.props.collection ? 1 : 0, this.props)
      });
    }

    if (this.props.onClick) {
      this.props.onClick(e, this.props.collection);
    }
  }

  public render(): JSX.Element {
    const { children, className, style, id, subscribeContent } = this.props;

    return (
      <Auth
        className={className}
        style={style}
        id={id}
        onClick={this.onClick}
        subscribeContent={subscribeContent}
      >{children}</Auth>
    );
  }
}

export default Collection;