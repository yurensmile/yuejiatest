import yj from '../../typings';
import * as React from 'react';
import * as classNames from 'classnames';
import ImgView from '../ImgView';
import sheet, { getActionName, DetailParams } from '../../model/behavior/sheet';
import PageStack from '../PageStack';
import './index.scss';
const playvideoImgFile = require('../../assets/playvideo.png');

export interface Props extends yj.ComponentProps, yj.ComponentBehavior {
  poster?: string;
  src: string;
  /** 视频的id */
  videoId?: string;
}

const prefixCls = 'yj-component-video';
class Video extends React.Component<Props> {
  constructor(props: Props) {
    super(props);

    this.videoRef = React.createRef();
    this.onPlay = this.onPlay.bind(this);
  }

  private videoRef: React.RefObject<HTMLVideoElement>;

  private onPlay(): void {
    const stackComponent = PageStack.getStackComponent();

    if (stackComponent) {
      stackComponent.behavior.trigger<DetailParams['Video']>({
        actionName: getActionName(sheet.Video, 0, this.props),
        detailedData: {
          id: this.props.videoId
        }
      });
    }

    if (this.videoRef.current) {
      this.videoRef.current.play();
    }
  }

  public render(): JSX.Element {
    const { style, className, poster, src } = this.props;

    return (
      <div
        className={classNames(prefixCls, className)}
        style={style}
        onClick={this.onPlay}
      >
        <img className={`${prefixCls}-play`} src={playvideoImgFile} />
        <video
          src={src}
          className={classNames(`${prefixCls}-video`, className)}
          ref={this.videoRef}
          poster={ImgView.defaultHost + poster}
        />
      </div>
    );
  }
}

export default Video;