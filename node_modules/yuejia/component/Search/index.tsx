import yj from '../../typings';
import * as React from 'react';
import * as classNames from 'classnames';
import Icon from '../Icon';
import Input from '../Input';
import Container from '../Container';
import Form from '../Form';
import FormItem from '../FormItem';
import Button from '../Button';
import FormService from '../Form/service';
import InputService from '../Input/service';
import PageStack from '../PageStack';
import { Event, Params } from '../../app/request';
import svgRootPath from '../../utils/svgRootPath';
import sheet, { DetailParams, getActionName } from '../../model/behavior/sheet';
import './index.scss';

const svgFile = {
  search: svgRootPath + require('../../assets/search.svg').id
};

interface Props extends  yj.ComponentProps, yj.ComponentBehavior {
  inputService?: InputService;
  formService?: FormService;
  onSubmit?: (content: string | number | undefined) => void;
  placeholder?: string;
  params?: Params & Event;
}

const prefixCls = 'yj-component-search';
class Search extends React.Component<Props> {

  public componentDidMount(): void {
    const { inputService, formService } = this.props;

    if (!inputService) {
      console.warn('Search组件缺少inputModel属性');
    }

    if (!formService) {
      console.warn('Search组件缺少formModel属性');
    }
  }

  private onSubmit = () => {
    const { onSubmit, inputService } = this.props;
    const stackComponent = PageStack.getStackComponent();

    if (inputService) {
      if (stackComponent) {
        stackComponent.behavior.trigger<DetailParams['Search']>({
          actionName: getActionName(sheet.Search, 0, this.props),
          detailedData: { keyword: inputService.value.get() }
        });
      }

      if (onSubmit) {
        onSubmit(inputService.value.get());
      }
    } else {
      console.warn('inputModel缺失onSubmit和behavior不会触发');
    }
  }

  public render(): JSX.Element {
    const { inputService, formService, placeholder, params, className, style } = this.props;
    return (
      <Container className={classNames(prefixCls, className)} style={style} alignItems="center">
        <Form className={`${prefixCls}-body`} service={formService} params={params} onSubmit={this.onSubmit}>
          <Icon className={`${prefixCls}-icon`} src={svgFile.search} />
          <FormItem className={`${prefixCls}-formitem`} service={inputService}>
            <FormItem.Body className={`${prefixCls}-formitem-body`}>
              <Input
                className={`${prefixCls}-input`}
                placeholder={placeholder}
              />
            </FormItem.Body>
            <FormItem.After>
              <Button
                className={`${prefixCls}-text`}
                htmlType="submit"
              >搜索</Button>
            </FormItem.After>
          </FormItem>
        </Form>
      </Container>
    );
  }
}

export default Search;
