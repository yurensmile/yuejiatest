import yj from '../../typings/index';
import * as React from 'react';

// interface Points {
//   x: number;
//   y: number;
// }

interface Props extends yj.ComponentProps  {
  type: 'left' | 'top' | 'bottom' | 'right';
  size: number;
  color: string;
  translate?: string;
}

const Triangle = (props: Props) => {
  const { type, size, color, translate } = props;
  const radius = size / 2;
  let points;

  switch (type) {
    case 'left':
      points = `0,${radius + 0.5} ${size},${size} ${size},0`;
      break;
    case 'right':
      points = `0,${size + 1} ${size},${radius + 0.5} 0,0`;
      //translate = `translate(${},0)`;
      break;
    case 'top':
      points = `0,${size} ${radius + 0.5},${0} ${size + 1},${size}`;
      break;
    case 'bottom':
      points = `0,0 ${radius + 0.5},${size} ${size + 1},0`;
     // translate = `translate(0,${})`;
      break;
    default:
      break;
  }

  return (
    <polygon
      className={props.className}
      points={points}
      transform={translate}
      style={{
        fill: color
      }}
    />
  );
};

export default Triangle;
