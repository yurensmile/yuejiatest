import yj from '../../typings/index';
import * as React from 'react';
import Container from '../Container';
import Fields from '../../_base/service/fields';

export interface Props extends yj.ComponentProps {
  className?: string;
  children?: any;
  service?: Fields<any>;
}

class Body extends React.PureComponent<Props> {
  constructor(props: Props) {
    super(props);
  }

  public static displayName: string = 'Body';

  public render(): JSX.Element {
    const { className, children, service, } = this.props;
    const render = React.Children.map(children, (child) => {
      return React.cloneElement(child as React.ReactElement<any>, { service });
    });

    return <Container className={className} flex={1}>{render}</Container>;
  }
}

export default Body;