import _yj from '../../typings';
import * as React from 'react';
import * as classNames from 'classnames';
import './index.scss';

interface Props extends _yj.ComponentProps {
  data: string[] ;
  /** 单个标签的样式 */
  tagCls?: string;
  /** 字体颜色和边框颜色 */
  color?: string;
  /** 边框变径 */
  radius?: number;
  /** 是否有边框 */
  border?: boolean;
}

const prefixCls = 'yj-component-Tags';
const Tags = (props: Props) => {
  const { data, color, className, radius, border, tagCls, style } = props;

  return (
    <div className={classNames(prefixCls, className)}>
      {/** 从服务器返回的值有可能会不存在 */}
      {data && data.map((label, i) => (
        <div
          key={label + i}
          className={classNames(`${prefixCls}-tag`, tagCls, {
            [`${prefixCls}-noborder`]: border === false
          })}
          style={{
            color,
            borderRadius: radius !== undefined ? radius : 20,
            ...style
          }}
        >{label}</div>
      ))}
    </div>
  );
};

export default Tags;
