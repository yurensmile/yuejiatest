import yj from '../../typings';
import * as React from 'react';
import { Value, CallBackOnClick } from '../../_base/action/Choice/index';
import ChoiceBase, { Base as ChoiceProps } from '../../_base/component/Choice';
import sheet, { getActionName, DetailParams } from '../../model/behavior/sheet';
import PageStack from '../PageStack';
import Service from './service';

export interface Props extends ChoiceProps, yj.ComponentBehavior {
  service?: Service;
  onClick?: CallBackOnClick;
  /** 当为true时会产生和Tab一样的行为记录 */
  tab?: boolean;
}

class Choice extends React.Component<Props> {
  constructor(props: Props) {
    super(props);

    this.onClick = this.onClick.bind(this);
  }

  private onClick(e: React.MouseEvent<HTMLDivElement>, value: Value[], index: number): void {
    const { service, onClick } = this.props;
    const stackComponent = PageStack.getStackComponent();

    if (service) {
      service.changeValue(value);
    } else {
      console.warn('缺少service，value不会发生改变');
    }

    if (stackComponent && value[0]) {
      stackComponent.behavior.trigger<DetailParams['Tab']>({
        actionName: getActionName(sheet.Tab, 0, this.props),
        detailedData: {
          name: value[0].text
        }
      });
    }

    if (onClick) {
      onClick(e, value, index);
    }
  }

  public render(): JSX.Element {
    const { service } = this.props;
    const value = service && service.value.get();

    return (
      <ChoiceBase
        {...this.props}
        value={value}
        onClick={this.onClick}
      />
    );
  }
}

export default Choice;