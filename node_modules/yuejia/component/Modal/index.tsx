import _yj from '../../typings/index';
import * as React from 'react';
import * as classNames from 'classnames';
import Mask from '../Mask';
import Button from '../Button';
import Container from '../Container';
import './index.scss';

export interface Props extends _yj.ComponentProps  {
  visible: boolean;
  buttonContainerCls?: string;
  dismissButtonCls?: string;
  okButtonCls?: string;
  oneButtonCls?: string;
  children?: any;
  dismissText?: string;
  okText?: string;
  onOk?: () => void;
  onClose?: () => void;
  dismissComponentName?: string;
  okComponentName?: string;
}

const prefixCls = 'yj-component-modal';

const Modal = (props: Props) => {
  const {
    okText, dismissText, children, visible, onOk, onClose, className, buttonContainerCls,
    dismissButtonCls, okButtonCls , oneButtonCls, style, dismissComponentName, okComponentName
  } = props;
  return (
    <Mask
      contentCls={classNames(prefixCls, className)}
      visible={visible}
      closable={false}
      style={style}
    >
      {children}
      {okText && dismissText ? (
        <Container className={buttonContainerCls} justifyContent="space-between">
          <Button className={dismissButtonCls} onClick={onClose} componentName={dismissComponentName}>{dismissText}</Button>
          <Button className={okButtonCls} onClick={onOk} componentName={okComponentName}>{okText}</Button>
        </Container>
      ) : (
        <Button className={oneButtonCls} onClick={onOk} componentName={okComponentName}>{okText || '知道了'}</Button>
      )}
    </Mask>
  );
};

export default Modal;