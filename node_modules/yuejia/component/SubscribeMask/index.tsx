import * as React from 'react';
import * as classNames from 'classnames';
import Mask from '../../component/Mask';
import Account from '../../model/account';
import './index.scss';

export interface Props {
  className?: string;
  visible: boolean;
  onClose: (e: React.MouseEvent<HTMLDivElement>) => void;
  children?: any;
}

const prefixCls = 'yj-component-subscribemask';

/** 关注二维码弹窗 */
class SubscribeMask extends React.PureComponent<Props> {
  constructor(props: Props) {
    super(props);

    this.onClose = this.onClose.bind(this);
  }

  private onClose(e: React.MouseEvent<HTMLDivElement>): void {
    e.preventDefault();
    e.stopPropagation();

    if (this.props.onClose) {
      this.props.onClose(e);
    }
  }

  public render(): JSX.Element | null {
    const { visible, children, className } = this.props;
    return Account.subscribeState !== true ? (
      <Mask
        contentCls={classNames(prefixCls, className)}
        visible={visible}
        onClose={this.onClose}
        closable={true}
      >
        {children}
      </Mask>
    ) : null;
  }
}

export default SubscribeMask;