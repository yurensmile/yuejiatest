import yj from '../../typings';
import * as React from 'react';
import Service from './service';
import ImgView from '../ImgView';
import wx from '../../app/weixin';
import Container from '../Container';
import Img from './Img';
import Upload, { Props as UploadProps } from './Upload';
import './index.scss';

export interface Props extends yj.ComponentProps, UploadProps {
  service?: Service;
  /** 微信上传图片接口成功后的回调 */
  onUpload: (mediaId: string, index: number) => void;
  /** 删除图片的回调 */
  onRemove?: (src: string) => void;
  /** 是否禁用 */
  disabled?: boolean;
  /** 图片加载失败的图片 */
  failView?: string;
  /** 单个项的样式 */
  itemCls?: string;
}

interface WrapProps {
  className: string;
  count: number;
  children: any;
}

interface DefaultProps {
  count: number;
  uploadIcon: string;
}

const prefixCls = 'yj-component-uploadimg';
const Wrap = (props: WrapProps) => {
  const { count, children, className } = props;
  return count === 1 ? (
    <div className={className}>{children}</div>
  ) : (
    <Container className={className} alignItems="center" flexWrap="wrap">{children}</Container>
  );
};
class UploadImg extends React.Component<Props & DefaultProps> {
  constructor(props: Props & DefaultProps) {
    super(props);

    this.onAdd = this.onAdd.bind(this);
    this.onRemove = this.onRemove.bind(this);
    this.onClickImage = this.onClickImage.bind(this);
  }

  public static defaultProps: DefaultProps = {
    count: 4,
    uploadIcon: '',
  };

  /** 添加图片 */
  public onAdd(): void {
    wx.chooseImage((mediaId, localData) => {
      const service = this.props.service;
      if (service) {
        this.props.onUpload(mediaId, service.value.get().length - 1);
      }
    });
  }

  /** 删除图片 */
  public onRemove(index: number): void {
    const service = this.props.service;

    if (service) {
      const temp = (service.value.get() || []).slice();

      if (this.props.onRemove) {
        this.props.onRemove(temp[index]);
      }

      temp.splice(index, 1);
      service.value.set(temp);
    }
  }

  /** 点击图片 */
  public onClickImage(src: string, index: number): void {
    // 只有在非编辑的情况下才能预览
    // if (this.props.disabled) {
    //   wx.previewImage(src, ImgView.defaultHost);
    // } else {
    //   wx.chooseImage((mediaId, localData) => {
    //     const service = this.props.service;
    //     if (service && this.props.onUpload) {
    //       this.props.onUpload(mediaId, index);
    //     }
    //   });
    // }
    wx.previewImage(src, ImgView.defaultHost);
  }

  public render(): JSX.Element {
    const { service, failView, count, uploadIconCls, uploadIcon, uploadCls, itemCls } = this.props;
    const value = service && service.value.get() || [];

    return (
      <Wrap className={prefixCls} count={count}>
        {value.map((item, i) => (
          <Img
            key={item}
            src={item}
            itemCls={itemCls}
            index={i}
            onClick={(src) => this.onClickImage(src, i)}
            onFailClick={() => this.onClickImage('', i)}
            onRemove={this.onRemove}
            failView={failView}
            disabled={!!this.props.disabled}
            count={count}
          />
        ))}
        {value.length < (count as number) && !this.props.disabled ? (
          <Upload
            itemCls={itemCls}
            uploadIconCls={uploadIconCls}
            uploadIcon={uploadIcon}
            uploadCls={uploadCls}
            onClick={this.onAdd}
            count={count}
          />
        ) : null}
      </Wrap>
    );
  }
}

export default UploadImg;
