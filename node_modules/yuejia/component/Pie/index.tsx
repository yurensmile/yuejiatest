import yj from '../../typings';
import * as React from 'react';

interface Props extends yj.ComponentProps {
  /** 主半径 */
  mainRadius: number;
  /** 内层半径 */
  innerRadius?: number;
  /** 主颜色 */
  mainColor: string;
  /** 次颜色 */
  secondaryColors: string;
  /** 进度 */
  progress: number;
}

const Pie = (props: Props) => {
  const { mainRadius, mainColor, secondaryColors, progress, id, style, className } = props;
  const size = mainRadius * 2;
  const innerRadius = props.innerRadius || parseInt((mainRadius / 2).toString());
  const degrees = progress * (360 / 100);
  const rad = degrees * (Math.PI / 180);
  const x = (Math.sin(rad) * mainRadius).toFixed(2);
  const y = -(Math.cos(rad) * mainRadius).toFixed(2);
  const lenghty = Number(degrees > 180);
  const descriptions = ['M', 0, 0, 'v', -mainRadius, 'A', mainRadius, mainRadius, 0, lenghty, 1, x, y, 'z'];

  return (
    <svg
      className={className}
      id={id}
      style={style}
      width={size}
      height={size}
    >
      <circle cx={mainRadius} cy={mainRadius} r={mainRadius} stroke="#fff" strokeWidth="1" fill={mainColor} />
      <path fill={secondaryColors} transform={`translate(${mainRadius},${mainRadius})`} d={descriptions.join(' ')} />
      <circle cx={mainRadius} cy={mainRadius} r={innerRadius} fill="#FFF" />
    </svg>
  );
};

export default Pie;