import yj from '../../typings';
import * as React from 'react';
import * as classNames from 'classnames';
import './index.scss';

export interface Props extends yj.ComponentProps {
  direction: ('left' | 'right' | 'bottom' | 'top')[];
  color: string;
}

const prefixCls = 'yj-component-border';

const Border = (props: Props) => {
  const { direction, color, className, style } = props;
  const render: JSX.Element[] = [];

  for (let i = 0; i < direction.length; i++) {
    render.push((
      <div
        key={i}
        className={`${prefixCls}-${direction[i]}`}
        style={{
          backgroundColor: color
        }}
      />
    ));
  }

  return <div className={classNames(prefixCls, className)} style={style}>{render}</div>;
};

export default Border;