import yj from '../../typings';
import * as React from 'react';
import * as classNames from 'classnames';
import isPassiveSupported from '../../utils/isPassiveSupported';
import './index.scss';

export interface Props extends yj.ComponentProps {
  children: any;
  /** 关闭事件 */
  onClose?: yj.OnClick<HTMLDivElement>;
  /** 是否允许点击背景关闭 */
  closable?: boolean;
  /** 背景样式 */
  maskCls?: string;
  /** 内容的样式 */
  contentCls?: string;
}

const prefixCls = 'yj-component-mask';
class Dialog extends React.Component<Props> {
  constructor(props: Props) {
    super(props);

    this.elemRef = React.createRef();
    this.onClick = this.onClick.bind(this);
  }

  private elemRef: React.RefObject<HTMLDivElement>;

  public componentDidMount(): void {
    document.body.style.overflow = 'hidden';
    if (this.elemRef.current) {
      this.elemRef.current.addEventListener('touchmove', this.stopPropagation, isPassiveSupported ? { passive: false } : false);
    }
  }

  public componentWillUnmount(): void {
    document.body.style.overflow = '';
    if (this.elemRef.current) {
      this.elemRef.current.removeEventListener('touchmove', this.stopPropagation);
    }
  }

  private onClick(e: React.MouseEvent<HTMLDivElement>): void {
    e.preventDefault();
    e.stopPropagation();

    if (this.props.closable && this.props.onClose) {
      this.props.onClose(e);
    }
  }

  private stopPropagation(e: React.MouseEvent<HTMLDivElement> | Event): void {
    e.preventDefault();
    e.stopPropagation();
  }

  public render(): JSX.Element {
    const { children, maskCls, className, contentCls, style } = this.props;
    return (
      <div
        className={classNames(prefixCls, className)}
        style={style}
      >
        <div
          className={classNames(`${prefixCls}-bg`, maskCls)}
          onClick={this.onClick}
          ref={this.elemRef}
        />
        <div
          className={classNames(`${prefixCls}-content`, contentCls)}
          onClick={this.stopPropagation}
        >{children}</div>
      </div>
    );
  }
}

export default Dialog;