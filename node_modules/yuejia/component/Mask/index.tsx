import * as React from 'react';
import * as ReactDOM from 'react-dom';
import Dialog, { Props as DialogProps } from './Dialog';
import './index.scss';

export interface Props extends DialogProps {
  /** 显示状态 */
  visible: boolean;
}

class Mask extends React.Component<Props> {
  constructor(props: Props) {
    super(props);
  }

  private id: string = Date.now().toString();

  public componentWillUnmount(): void {
    this.removeContainer();
  }

  public shouldComponentUpdate(nextProps: Props): boolean {
    const visible = nextProps.visible;
    return !!(this.props.visible || visible);
  }

  public removeContainer(): void {
    const container = document.getElementById(this.id) as HTMLElement;
    if (container && container.parentNode) {
      container.parentNode.removeChild(container);
    }
  }

  private getContainer(): HTMLDivElement {
    const id = this.props.id || this.id;
    let container = document.getElementById(id) as HTMLDivElement;
    if (!container) {
      container = document.createElement('div');
      container.setAttribute('id', id);
      document.body.appendChild(container);
    }
    return container;
  }

  public render(): React.ReactPortal | null {
    const { visible, children } = this.props;

    return visible ? ReactDOM.createPortal(
      <Dialog
        {...this.props}
      >{children}</Dialog>,
      this.getContainer()
    ) : null;
  }
}

export default Mask;