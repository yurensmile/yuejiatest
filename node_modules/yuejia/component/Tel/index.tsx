import yj from '../../typings';
import * as React from 'react';
import Auth, { Props as AuthProps } from '../Auth';
import PageStack from '../PageStack';
import sheet, { getActionName, DetailParams } from '../../model/behavior/sheet';

export interface Props extends yj.ComponentProps, yj.ComponentBehavior {
  children?: any;
  tel: string;
  onClick?: (e: React.MouseEvent<HTMLDivElement>) => void;
  subscribeContent?: AuthProps['subscribeContent'];
}

class Tel extends React.Component<Props> {
  constructor(props: Props) {
    super(props);

    this.onClick = this.onClick.bind(this);
  }

  private onClick(e: React.MouseEvent<HTMLDivElement>): void {
    const stackComponent = PageStack.getStackComponent();

    if (stackComponent) {
      stackComponent.behavior.trigger<DetailParams['Tel']>({
        actionName: getActionName(sheet.Tel, 0, this.props),
        detailedData: {
          tel: this.props.tel
        }
      });
    }

    if (this.props.onClick) {
      this.props.onClick(e);
    }
    window.location.href = `tel:${this.props.tel}`;
  }

  public render(): JSX.Element {
    const { children, className, style, id, subscribeContent } = this.props;

    return (
      <Auth
        className={className}
        style={style}
        id={id}
        onClick={this.onClick}
        subscribeContent={subscribeContent}
      >{children}</Auth>
    );
  }
}

export default Tel;