import * as React from 'react';
import Service, { MapMarker } from '../service';
import MarkerService from '../service/marker';
import { Props as IconTextProps } from '../../../_base/view/IconText';
import Marker, { Base as MarkerBase } from '../Marker';
import { ChildrenProps } from '../index';

export interface Props extends ChildrenProps {
  icon: IconTextProps['icon'];
  text: IconTextProps['text'];
  markerIcon: MarkerBase['icon'];
  activeMarkerIcon?: MarkerBase['icon'];
}

class TabItem extends React.Component<Props> {
  private get markers(): MarkerService[] {
    const service = this.props.service as Service;
    const activeTab = service.supporting.choice.value.get();

    if (activeTab.length) {
      const activeTabText = activeTab[0].text;

      if (activeTabText === this.props.text) {
        const supportingMarker = service.supportingMarker.get();
        return (supportingMarker && (supportingMarker as MapMarker).get(activeTabText)) || [];
      }
    }

    return [];
  }

  private getPoint(mapPoint: BMap.Point): MarkerBase['point'] {
    return [mapPoint.lng, mapPoint.lat];
  }

  public render(): JSX.Element[] {
    const { map, markerIcon, service, activeMarkerIcon } = this.props;

    return this.markers.map((item, i) => (
      <Marker
        key={Date.now() + i}
        map={map as BMap.Map}
        onCreate={() => null}
        icon={markerIcon}
        activeIcon={activeMarkerIcon}
        point={this.getPoint(item.mapPoint as BMap.Point)}
        service={service as Service}
        markerService={item}
        title={item.poi && item.poi.title || ''}
        address={item.poi && item.poi.address || ''}
      />
    ));
  }
}

export default TabItem;