import yj from '../../typings';
import * as classNames from 'classnames';
import * as React from 'react';
import zellerFormula from '../../utils/zellerFormula';
import getDaysInDate from '../../utils/getDaysInDate';
import dateformat from '../../utils/dateformat';
import leftPad from '../../utils/leftPad';
import Day, { BaseProps as DayProps } from './Day';
import Container from '../Container';
import './index.scss';

export interface BaseProps {
  /** 添加到Day组件的类名 */
  dayCls?: string;
  /** 激活的日子 */
  activeDate?: string[];
  /** 加点的日子  */
  dotDate?: string[];
}

export interface Props extends yj.ComponentProps, DayProps, BaseProps {
  /** 当前要渲染的日期 */
  date: Date;
  /** 选中的日期 */
  selectedDate: Date | undefined;
}

const prefixCls = 'yj-component-calendar-cell';

function include(dates: string[], date: string): boolean {
  for (let i = 0; i < dates.length; i++) {
    if (dates[i] === date) {
      return true;
    }
  }

  return false;
}

const Cell = (props: Props) => {
  const { className, style, date, activeDate, dotDate, dayCls, onClick, selectedDate } = props;
  // 当月总天数
  const days = getDaysInDate(date);
  // 当月第一天是星期几
  const firstDay = zellerFormula(new Date(date.getFullYear(), date.getMonth(), 1));
  // 年月的字符串
  const ymStr = dateformat(date, 'yyMM', true) + '-';
  const selectedStr = selectedDate ? dateformat(selectedDate, 'yyMMdd', true) : '';
  // 已渲染的天数
  let day: number = 0;
  let key: number = 0;

  return (
    <div
      // 需要从Carousel中获取className
      className={classNames(prefixCls, className)}
      style={style}
    >
      {[0, 1, 2, 3, 4].map((col) => {
        return (
          <Container
            className={`${prefixCls}-col`}
            key={col}
            alignItems="center"
            justifyContent="center"
          >
            {[0, 1, 2, 3, 4, 5, 6].map((week) => {
              const visible = (col === 0 && week >= firstDay) || (col > 0 && day < days.length);
              day = visible ? day + 1 : day;
              key++;
              const dateStr = ymStr + leftPad(day);

              return (
                <Day
                  key={key}
                  className={dayCls}
                  visible={visible}
                  label={day}
                  weekend={week === 0 || week === 6}
                  active={activeDate ? include(activeDate, dateStr) : false}
                  dot={dotDate ? include(dotDate, dateStr) : false}
                  selected={selectedDate ? dateStr === selectedStr : false}
                  onClick={onClick}
                />
              );
            })}
          </Container>
        );
      })}
    </div>
  );
};

export default Cell;