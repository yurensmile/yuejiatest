import yj from '../../typings';
import * as React from 'react';
import * as classNames from 'classnames';
import Container from '../Container';
import Text from '../Text';
import './index.scss';

interface Props extends yj.ComponentProps {
  /** 价格 */
  value: number;
  /** 单位 */
  unit: string;
  /** 价格样式 */
  valueCls?: string;
  /** 待定的样式 */
  pendingCls?: string;
  /** 单位样式 */
  unitCls?: string;
  onClick?: yj.OnClick<HTMLDivElement>;
}

const prefixCls = 'yj-component-valueunit';
const ValueUnit = (props: Props) => {
  const { className, valueCls, unitCls, pendingCls, value, onClick, style, unit } = props;

  return (
    <Container
      className={classNames(prefixCls, className)}
      onClick={onClick}
      style={style}
    >
      {value > 0 ? [
        <Text className={classNames(`${prefixCls}-value`, valueCls)} key="value">{value}</Text>,
        <div className={classNames(`${prefixCls}-unit`, unitCls)} key="unit">{unit}</div>
      ] : (
        <div className={classNames(`${prefixCls}-pending`, pendingCls)}>待定</div>
      )}
    </Container>
  );
};

export default ValueUnit;
