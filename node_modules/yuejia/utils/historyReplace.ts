import * as History from 'history';
import getRoute from './getRoute';
import hexToString from './hexToString';

export default function historyReplace(customRoute?: string): void {
  const hash = window.location.hash;

  // 如果有自定义路由，优先跳转自定义路由
  if (customRoute) {
    const history = process.env.historyMode === 'browser' ?  History.createBrowserHistory() : History.createHashHistory();
    history.replace(customRoute);
  } else if (!hash) {
    /*
    * 如果hahs不存在就代表是从分享链接进来的或是从入口进入到首页
    * 如果是从分享进来的，第一次会从route参数进入跳转，后面再刷新就不会再读取route参数，可以防止刷新后回到分享进来的页面
    */
    const route = getRoute();
    const history = process.env.historyMode === 'browser' ?  History.createBrowserHistory() : History.createHashHistory();

    if (route) {
      history.replace(hexToString(route));
    }
  }
}