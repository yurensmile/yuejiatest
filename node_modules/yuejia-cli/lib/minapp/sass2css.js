"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const sass = require("node-sass");
const fs = require("fs");
const path = require("path");
const css = require("css");
const dir_1 = require("../create/dir");
const stringify = require("stringify-object");
const ts2js_1 = require("./ts2js");
let l = 0;
function sass2css(filePath) {
    l++;
    const filename = `./src/${filePath}.scss`;
    sass.render({
        file: filename,
        outFile: `./dist/${filePath}.wxss`
    }, (err, result) => {
        if (!result) {
            return;
        }
        const content = result.css.toString();
        const cssAst = css.parse(content);
        fs.writeFileSync(`./sourcefile/${l}.log`, stringify(cssAst), { encoding: 'utf8' });
        const selectors = [];
        let typings = 'export default {\n';
        if (cssAst.stylesheet && cssAst.stylesheet.rules) {
            cssAst.stylesheet.rules.forEach((rule) => {
                const ruleSelectors = rule.selectors;
                if (rule && rule.type === 'rule' && ruleSelectors) {
                    ruleSelectors.forEach((item) => {
                        selectors.push(item);
                    });
                }
            });
        }
        selectors.forEach((item) => {
            let className = item.substr(1);
            if (className.indexOf(':') > 0) {
                className = item.substr(0, className.indexOf(':'));
            }
            else if (className.indexOf('.') > 0) {
                className = item.substr(0, className.indexOf('.'));
            }
            typings += `  ${className}: '${className}',\n`;
        });
        typings += '};';
        fs.writeFileSync(`./src/${filePath}.scss.ts`, typings, { encoding: 'utf8' });
        dir_1.createDirByFilePath(path.normalize(`./dist/${filePath}`));
        fs.writeFileSync(`./dist/${filePath}.wxss`, content, { encoding: 'utf8' });
        ts2js_1.default(filePath + '.scss');
    });
}
exports.default = sass2css;
