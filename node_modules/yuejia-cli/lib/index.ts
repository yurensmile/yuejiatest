/// <reference path="../typings/index.d.ts" />

import { argv } from 'yargs';
import * as fs from 'fs';
import * as path from 'path';
import * as program from 'commander';
import createPage from './create/page';
import createComponent from './create/component';
import createProject from './create/project';
import createRouter from './create/router';
import createRequest from './create/request';
import createService from './create/service';
import outputBehavior from './behavior';
// import unzipNodeModules from './unzip/node_modules';
import minapp from './minapp';

const packageJson = JSON.parse(fs.readFileSync(path.resolve(__dirname, '../package.json'), { encoding: 'utf8' }));
const version = packageJson.version;

program
  .version(version)
  // .option('create project --path [path]', '创建一个项目')
  // .option('create page --name [name]', '创建一个page')
  // .option('create model --name [name] --type ["display"]', '创建一个动作')
  // .option('create action --service [serviceName] --name [name] --type ["getList" | "getDetail"]', '创建一个动作')
  // .option('unzip node_modules [path]', '解压node_modules')
  .parse(process.argv);

const command = argv._.join(' ');

switch (command) {
  case 'create project':
    createProject();
    break;
  case 'create page':
    createPage();
    break;
  case 'create component':
    createComponent();
    break;
  case 'create request':
    createRequest();
    break;
  case 'create service':
    createService();
    break;
  case 'create bs':
    outputBehavior();
    break;
  case 'unzip node_modules':
    // unzipNodeModules();
    break;
  case 'transform router':
    createRouter('');
    break;
  case 'minapp dev':
    minapp();
    break;
  default:
    break;
}