"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ts = require("typescript");
const getJsxElementAttr_1 = require("../getJsxElementAttr");
const getLiteralValue_1 = require("../getLiteralValue");
const eachNode_1 = require("../eachNode");
function getGlobalRoutes(node) {
    if (node.kind === ts.SyntaxKind.ExpressionStatement) {
        const expression = node;
        const binaryExpression = expression.expression;
        const left = binaryExpression.left;
        const leftExpression = left.expression;
        const right = binaryExpression.right;
        if (leftExpression.text === 'global' && left.name.text === 'routes') {
            return right.elements;
        }
    }
}
function getAppRoutes(source) {
    const routes = {};
    let component;
    for (let i = 0; i < source.statements.length; i++) {
        getGlobalRoutes(source.statements[i]);
        if (component === undefined) {
            eachNode_1.default(source.statements[i], (node) => {
                if (component === undefined) {
                    component = getGlobalRoutes(node);
                }
            });
        }
        else {
            break;
        }
    }
    if (component) {
        for (const route of component) {
            const pageAttr = getJsxElementAttr_1.default(route, 'component');
            const pathAttr = getJsxElementAttr_1.default(route, 'path');
            if (pageAttr && pathAttr) {
                const pageValue = pageAttr.text;
                const pathValue = getLiteralValue_1.default(pathAttr);
                routes[pageValue] = pathValue;
            }
        }
    }
    return routes;
}
exports.default = getAppRoutes;
