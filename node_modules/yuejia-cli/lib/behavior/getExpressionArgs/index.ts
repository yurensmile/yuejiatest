import * as ts from 'typescript';
/**
 * 获取表达式的第一个参数
 * @param node 要查找的节点
 */
// tslint:disable-next-line:max-line-length
export default function getExpressionArgs(node: ts.Node, expression: string, propertyAccess: string): ts.NodeArray<ts.Expression> | undefined {
  if (node.kind === ts.SyntaxKind.ExpressionStatement) {
    const callExpression = (node as ts.ExpressionStatement).expression as ts.CallExpression;

    if (callExpression.kind === ts.SyntaxKind.CallExpression) {
      const propertyAccessExpression = callExpression.expression as ts.PropertyAccessExpression;

      if (propertyAccessExpression.kind === ts.SyntaxKind.PropertyAccessExpression) {
        // tslint:disable-next-line:max-line-length
        if (propertyAccessExpression.expression.kind === ts.SyntaxKind.Identifier && propertyAccessExpression.name.kind === ts.SyntaxKind.Identifier) {
          const expressionIdentifier = propertyAccessExpression.expression as ts.Identifier;
          const nameIdentifier = propertyAccessExpression.name as ts.Identifier;

          if (expressionIdentifier.text === expression && nameIdentifier.text === propertyAccess) {
            return callExpression.arguments;
          }
        }
      }
    }
  }
}