"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs");
const path = require("path");
const firstCharToLower_1 = require("../utils/firstCharToLower");
const dir_1 = require("./dir");
function createImport(params) {
    const { routerConfig, pages } = params;
    let content = '';
    for (let i = 0; i < pages.length; i++) {
        const page = pages[i];
        const routerPath = `'../view/pages/${page}'`;
        const file = firstCharToLower_1.default(page);
        let importCode;
        if (routerConfig.codeSplitting) {
            importCode = `const ${page} = asyncComponent(() => import(/* webpackChunkName: '${file}' */${routerPath}))`;
        }
        else {
            importCode = `import(${routerPath})`;
        }
        content += importCode + ';\n';
    }
    return content;
}
function createEntry(params) {
    const { routerConfig, routerFile, pages } = params;
    const history = routerConfig.mode;
    let content = `<${history}>\n<Switch>\n`;
    for (let i = 0; i < pages.length; i++) {
        const page = pages[i];
        const routerPath = '/' + (routerFile.indexRouter === page ? '' : firstCharToLower_1.default(page));
        content += `<Route exact path="${routerPath}" component={${page}} />\n`;
    }
    content += `</Switch>\n</${history}>`;
    return content;
}
function writeFile(params) {
    const { projectPath, routerFile } = params;
    const writeDir = path.resolve(projectPath, 'src/app/router');
    let content = `
    import * as React from 'react';
    import { Route, HashRouter, Switch } from 'react-router-dom';
    import asyncComponent from 'ruler-framework/lib/hoc/AsyncComponent';

  `;
    content += createImport(params);
    content += `
    export default (
  `;
    content += createEntry(params);
    content += ');';
    dir_1.default(writeDir, []);
    fs.writeFileSync(path.resolve(writeDir, (routerFile.name || 'index') + '.tsx'), content, { encoding: 'utf8' });
}
function default_1(projectPath) {
    const packageFile = path.resolve(projectPath, 'package.json');
    const pkg = JSON.parse(fs.readFileSync(packageFile, 'utf8')).router;
    const moduleConfig = pkg.module;
    if (pkg.autoCreate) {
        for (let i = 0; i < moduleConfig.length; i++) {
            const routerFile = moduleConfig[i];
            const pages = fs.readdirSync(path.resolve(projectPath, `./src/app/view/pages/${routerFile.name}`));
            writeFile({
                projectPath,
                routerConfig: pkg,
                routerFile,
                pages
            });
        }
    }
}
exports.default = default_1;
