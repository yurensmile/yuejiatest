import firstCharToUpper from '../utils/firstCharToUpper';

export function pageSass(): string {
  return `.page {
  min-height: 100vh;
  background: #fff;
}`;
}

export function componentSass(): string {
  return `.component {
  background: #fff;
}`;
}
/** 页面组件 */
export function pageComponent(name: string): string {
  return `import * as React from 'react';
import * as style from './index.scss';
import BasePage, { PageProps } from 'yuejia/app/Page';
import Page from 'yuejia/component/Page';
import View from 'yuejia/component/View';
import { Context } from 'yuejia/component/Model';

interface Match {
}
interface Props {
}
interface State {
}

const Complete = View.Complete;
const Empty = View.Empty;
const Fail = View.Fail;

class ${name} extends BasePage<Props, State, Match> {
  constructor(props: PageProps<Match>, state: State) {
    super(props, state);
    this.init();
  }

  public displayName: string = '${name}';
  public pageName: string = '';

  public render(): JSX.Element {
    return (
      <div className={style.page} ref={this.pageElemRef}>
        <Context.Consumer>
          {() => (
            <Page pageId={this.pageId}>
              <View>
                <Complete>
                  <div>完成的页面</div>
                </Complete>
                <Empty>
                  <div>空页面</div>
                </Empty>
                <Fail>
                  <div>错误页面</div>
                </Fail>
              </View>
            </Page>
          )}
        </Context.Consumer>
      </div>
    );
  }
}

export default ${name};
`;
}

/** 有状态组件 */
export function stateComponent(name: string, type: 'component' | 'page'): string {
  return `import * as React from 'react';
import * as style from './index.scss';

interface Props {
}
interface State {
}

class ${name} extends React.Component<Props, State> {
  constructor(props: Props, state: State) {
    super(props, state);
  }

  public render(): JSX.Element {
    return (
      <div className={style.${type}}>

      </div>
    );
  }
}

export default ${name};
`;
}

/** 纯组件  */
export function pureComponent(name: string, type: 'component' | 'page'): string {
  return `import * as React from 'react';
import * as style from './index.scss';

interface Props {
}

const ${name} = (props: Props) => {
  return (
    <div className={style.${type}}></div>
  );
};

export default ${name};
`;
}

export function request(name: string): string {
  return `import Request, { Event } from 'yuejia/app/request';
import Toast from 'yuejia/component/Toast';

export interface Params extends Event {
}

class ${firstCharToUpper(name)} extends Request {
  // 如果是获取数据类型的请求就需要data，并且正确设置类型和初始化；如果是请求类的一般就不需要data
  //public data;
  /** 发送请求 */
  public async send(params?: Params): Promise<void> {
    this.action({
      config: {
        url: '',
        method: '',
      }
    }).then((response) => {
      if (response.retCode === '0000') {

        if (params && params.callback) {
          params.callback(response);
        }

        // 如果是获取数据类型的就需要设置数据
        //this.data.set();
        // 如果请求属于提交表单类型（没有data），那么就需要手动调用this.state.set，防止提交按钮不能再次点击
        //this.state.set('complete');
      } else {
        this.state.set('fail');
        Toast.show(response.retMsg);
      }
    }).catch((err) => {
      Toast.show('网络繁忙');
      throw err;
    });
  }
}

export default ${firstCharToUpper(name)};
`;
}

export function service(name: string): string {
  return `
class ${firstCharToUpper(name)} {
}

export default ${firstCharToUpper(name)};
`;
}